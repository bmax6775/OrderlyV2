<?php
/**
 * Orderlyy One-Click Installer
 * Automated installation for shared hosting environments
 */

session_start();
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Installation steps
$steps = [
    1 => 'System Requirements',
    2 => 'Database Configuration', 
    3 => 'License Verification',
    4 => 'Admin Account Setup',
    5 => 'Branding Configuration',
    6 => 'Installation Complete'
];

$currentStep = (int)($_GET['step'] ?? 1);
$errors = [];
$success = [];

// Check if already installed
if (file_exists('config.php') && !isset($_GET['force'])) {
    $configContent = file_get_contents('config.php');
    if (strpos($configContent, 'ORDERLYY_INSTALLED') !== false) {
        die('Orderlyy is already installed. To reinstall, delete config.php or add ?force=1 to the URL.');
    }
}

/**
 * Step 1: System Requirements Check
 */
function checkSystemRequirements() {
    $requirements = [
        'PHP Version >= 7.4' => version_compare(PHP_VERSION, '7.4.0', '>='),
        'PDO Extension' => extension_loaded('pdo'),
        'PDO PostgreSQL' => extension_loaded('pdo_pgsql'),
        'cURL Extension' => extension_loaded('curl'),
        'JSON Extension' => extension_loaded('json'),
        'GD Extension' => extension_loaded('gd'),
        'File Uploads' => ini_get('file_uploads'),
        'Writable Directory' => is_writable('./')
    ];
    
    return $requirements;
}

/**
 * Step 2: Database Configuration
 */
function testDatabaseConnection($host, $port, $dbname, $username, $password) {
    try {
        $dsn = "pgsql:host=$host;port=$port;dbname=$dbname";
        $pdo = new PDO($dsn, $username, $password);
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        return ['success' => true, 'pdo' => $pdo];
    } catch (PDOException $e) {
        return ['success' => false, 'error' => $e->getMessage()];
    }
}

/**
 * Step 3: License Verification
 */
function verifyLicense($licenseKey, $domain) {
    // For demo purposes, accept any 32-character key
    if (strlen($licenseKey) === 32) {
        return ['valid' => true, 'message' => 'License verified successfully'];
    }
    
    // In production, implement remote license verification
    return ['valid' => false, 'error' => 'Invalid license key format'];
}

/**
 * Step 4: Database Schema Installation
 */
function installDatabase($pdo) {
    try {
        // Read and execute schema file
        $schema = file_get_contents('database_postgresql.sql');
        $statements = array_filter(array_map('trim', explode(';', $schema)));
        
        foreach ($statements as $statement) {
            if (!empty($statement)) {
                $pdo->exec($statement);
            }
        }
        
        return ['success' => true];
    } catch (PDOException $e) {
        return ['success' => false, 'error' => $e->getMessage()];
    }
}

/**
 * Step 5: Create Configuration File
 */
function createConfigFile($dbConfig, $licenseKey, $adminData, $brandingData) {
    $configTemplate = '<?php
// Orderlyy Configuration File
// Generated by installer on ' . date('Y-m-d H:i:s') . '

// Database configuration
$database_url = getenv(\'DATABASE_URL\');

if ($database_url) {
    $db_parts = parse_url($database_url);
    $host = $db_parts[\'host\'];
    $port = $db_parts[\'port\'] ?? 5432;
    $dbname = ltrim($db_parts[\'path\'], \'/\');
    $username = $db_parts[\'user\'];
    $password = $db_parts[\'pass\'];
    
    $dsn = "pgsql:host=$host;port=$port;dbname=$dbname";
} else {
    // Manual database configuration
    $host = \'' . $dbConfig['host'] . '\';
    $port = \'' . $dbConfig['port'] . '\';
    $dbname = \'' . $dbConfig['dbname'] . '\';
    $username = \'' . $dbConfig['username'] . '\';
    $password = \'' . $dbConfig['password'] . '\';
    
    $dsn = "pgsql:host=$host;port=$port;dbname=$dbname";
}

try {
    $pdo = new PDO($dsn, $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    $pdo->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_ASSOC);
} catch(PDOException $e) {
    die("Connection failed: " . $e->getMessage());
}

// Application settings
define(\'APP_NAME\', \'' . $brandingData['app_name'] . '\');
define(\'APP_VERSION\', \'1.0.0\');
define(\'UPLOAD_PATH\', \'uploads/\');
define(\'SCREENSHOT_PATH\', \'uploads/screenshots/\');
define(\'ORDERLYY_LICENSE_KEY\', \'' . $licenseKey . '\');
define(\'ORDERLYY_INSTALLED\', true);

// Create upload directories if they don\'t exist
if (!file_exists(UPLOAD_PATH)) {
    mkdir(UPLOAD_PATH, 0755, true);
}
if (!file_exists(SCREENSHOT_PATH)) {
    mkdir(SCREENSHOT_PATH, 0755, true);
}
if (!file_exists(\'uploads/branding/\')) {
    mkdir(\'uploads/branding/\', 0755, true);
}

// Security settings
define(\'SECURE_AUTH_KEY\', \'' . bin2hex(random_bytes(32)) . '\');
define(\'SECURE_AUTH_SALT\', \'' . bin2hex(random_bytes(32)) . '\');

// Helper functions
function isLoggedIn() {
    return isset($_SESSION[\'user_id\']);
}

function getUserRole() {
    return $_SESSION[\'role\'] ?? \'guest\';
}

// Include license system
require_once \'license_system.php\';
?>';

    return file_put_contents('config.php', $configTemplate) !== false;
}

// Process form submissions
if ($_POST) {
    switch ($currentStep) {
        case 2: // Database Configuration
            $dbConfig = [
                'host' => trim($_POST['db_host']),
                'port' => trim($_POST['db_port']) ?: '5432',
                'dbname' => trim($_POST['db_name']),
                'username' => trim($_POST['db_username']),
                'password' => $_POST['db_password']
            ];
            
            $dbTest = testDatabaseConnection($dbConfig['host'], $dbConfig['port'], 
                                          $dbConfig['dbname'], $dbConfig['username'], 
                                          $dbConfig['password']);
            
            if ($dbTest['success']) {
                $_SESSION['db_config'] = $dbConfig;
                $_SESSION['pdo'] = $dbTest['pdo'];
                $success[] = 'Database connection successful!';
                $currentStep = 3;
            } else {
                $errors[] = 'Database connection failed: ' . $dbTest['error'];
            }
            break;
            
        case 3: // License Verification
            $licenseKey = strtoupper(trim($_POST['license_key']));
            $domain = $_SERVER['HTTP_HOST'];
            
            $licenseCheck = verifyLicense($licenseKey, $domain);
            
            if ($licenseCheck['valid']) {
                $_SESSION['license_key'] = $licenseKey;
                $success[] = 'License verified successfully!';
                $currentStep = 4;
            } else {
                $errors[] = 'License verification failed: ' . $licenseCheck['error'];
            }
            break;
            
        case 4: // Admin Account Setup
            $adminData = [
                'username' => trim($_POST['admin_username']),
                'email' => trim($_POST['admin_email']),
                'password' => password_hash($_POST['admin_password'], PASSWORD_DEFAULT),
                'full_name' => trim($_POST['admin_name'])
            ];
            
            if (strlen($_POST['admin_password']) < 6) {
                $errors[] = 'Password must be at least 6 characters long';
            } else {
                $_SESSION['admin_data'] = $adminData;
                $currentStep = 5;
            }
            break;
            
        case 5: // Branding Configuration & Installation
            $brandingData = [
                'app_name' => trim($_POST['app_name']) ?: 'Orderlyy',
                'tagline' => trim($_POST['tagline']) ?: 'Professional Order Management System',
                'primary_color' => $_POST['primary_color'] ?: '#ffc500',
                'secondary_color' => $_POST['secondary_color'] ?: '#000000'
            ];
            
            // Install database
            $dbInstall = installDatabase($_SESSION['pdo']);
            if (!$dbInstall['success']) {
                $errors[] = 'Database installation failed: ' . $dbInstall['error'];
                break;
            }
            
            // Create super admin account
            $stmt = $_SESSION['pdo']->prepare("
                INSERT INTO users (username, email, password, full_name, role, status, created_at)
                VALUES (?, ?, ?, ?, 'super_admin', 'active', NOW())
                ON CONFLICT (username) DO NOTHING
            ");
            $stmt->execute([
                $_SESSION['admin_data']['username'],
                $_SESSION['admin_data']['email'],
                $_SESSION['admin_data']['password'],
                $_SESSION['admin_data']['full_name']
            ]);
            
            // Update branding settings
            $brandingSettings = [
                ['app_name', $brandingData['app_name']],
                ['tagline', $brandingData['tagline']],
                ['primary_color', $brandingData['primary_color']],
                ['secondary_color', $brandingData['secondary_color']],
                ['license_key', $_SESSION['license_key']]
            ];
            
            foreach ($brandingSettings as [$key, $value]) {
                $stmt = $_SESSION['pdo']->prepare("
                    INSERT INTO branding_settings (setting_key, setting_value, updated_by)
                    VALUES (?, ?, 1)
                    ON CONFLICT (setting_key) 
                    DO UPDATE SET setting_value = ?, updated_at = NOW()
                ");
                $stmt->execute([$key, $value, $value]);
            }
            
            // Create config file
            if (createConfigFile($_SESSION['db_config'], $_SESSION['license_key'], 
                               $_SESSION['admin_data'], $brandingData)) {
                
                // Log installation
                $stmt = $_SESSION['pdo']->prepare("
                    INSERT INTO installations (license_key, domain, installation_data, installation_status, completed_at)
                    VALUES (?, ?, ?, 'completed', NOW())
                ");
                $stmt->execute([
                    $_SESSION['license_key'],
                    $_SERVER['HTTP_HOST'],
                    json_encode([
                        'admin_username' => $_SESSION['admin_data']['username'],
                        'app_name' => $brandingData['app_name'],
                        'install_date' => date('Y-m-d H:i:s')
                    ])
                ]);
                
                $currentStep = 6;
                $success[] = 'Installation completed successfully!';
                
                // Clear session data
                unset($_SESSION['db_config'], $_SESSION['license_key'], $_SESSION['admin_data'], $_SESSION['pdo']);
                
            } else {
                $errors[] = 'Failed to create configuration file. Please check file permissions.';
            }
            break;
    }
}

?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Orderlyy Installer</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #ffc500 0%, #e6b800 100%);
            min-height: 100vh;
            padding: 20px 0;
        }
        
        .installer-container {
            max-width: 800px;
            margin: 0 auto;
        }
        
        .step-indicator {
            display: flex;
            justify-content: space-between;
            margin-bottom: 30px;
            position: relative;
        }
        
        .step-indicator::before {
            content: '';
            position: absolute;
            top: 20px;
            left: 0;
            right: 0;
            height: 2px;
            background: rgba(255, 255, 255, 0.3);
            z-index: 1;
        }
        
        .step {
            background: rgba(255, 255, 255, 0.2);
            color: white;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            position: relative;
            z-index: 2;
            transition: all 0.3s ease;
        }
        
        .step.active,
        .step.completed {
            background: white;
            color: #ffc500;
        }
        
        .step.completed {
            background: #28a745;
            color: white;
        }
        
        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }
        
        .btn-primary {
            background: #ffc500;
            border-color: #ffc500;
            color: #000;
            font-weight: 600;
        }
        
        .btn-primary:hover {
            background: #e6b800;
            border-color: #e6b800;
            color: #000;
        }
        
        .requirement-check {
            padding: 10px;
            border-radius: 8px;
            margin-bottom: 10px;
        }
        
        .requirement-pass {
            background: #d1e7dd;
            color: #0f5132;
        }
        
        .requirement-fail {
            background: #f8d7da;
            color: #721c24;
        }
    </style>
</head>
<body>
    <div class="installer-container">
        <!-- Header -->
        <div class="text-center mb-4">
            <h1 class="text-white mb-2">
                <i class="fas fa-layer-group me-2"></i>Orderlyy Installer
            </h1>
            <p class="text-white opacity-75">Professional Order Management System Setup</p>
        </div>
        
        <!-- Step Indicator -->
        <div class="step-indicator">
            <?php for ($i = 1; $i <= 6; $i++): ?>
            <div class="step <?php echo $i == $currentStep ? 'active' : ($i < $currentStep ? 'completed' : ''); ?>" 
                 title="<?php echo $steps[$i]; ?>">
                <?php echo $i < $currentStep ? '<i class="fas fa-check"></i>' : $i; ?>
            </div>
            <?php endfor; ?>
        </div>
        
        <!-- Main Card -->
        <div class="card">
            <div class="card-header bg-white border-0">
                <h4 class="card-title mb-0">
                    Step <?php echo $currentStep; ?>: <?php echo $steps[$currentStep]; ?>
                </h4>
            </div>
            <div class="card-body">
                <!-- Alerts -->
                <?php if (!empty($errors)): ?>
                    <div class="alert alert-danger">
                        <ul class="mb-0">
                            <?php foreach ($errors as $error): ?>
                                <li><?php echo htmlspecialchars($error); ?></li>
                            <?php endforeach; ?>
                        </ul>
                    </div>
                <?php endif; ?>
                
                <?php if (!empty($success)): ?>
                    <div class="alert alert-success">
                        <ul class="mb-0">
                            <?php foreach ($success as $msg): ?>
                                <li><?php echo htmlspecialchars($msg); ?></li>
                            <?php endforeach; ?>
                        </ul>
                    </div>
                <?php endif; ?>
                
                <?php if ($currentStep == 1): ?>
                    <!-- Step 1: System Requirements -->
                    <p>Checking your server environment for compatibility...</p>
                    
                    <?php $requirements = checkSystemRequirements(); ?>
                    <?php foreach ($requirements as $requirement => $status): ?>
                        <div class="requirement-check <?php echo $status ? 'requirement-pass' : 'requirement-fail'; ?>">
                            <i class="fas <?php echo $status ? 'fa-check' : 'fa-times'; ?> me-2"></i>
                            <?php echo $requirement; ?>
                            <span class="float-end"><?php echo $status ? 'PASS' : 'FAIL'; ?></span>
                        </div>
                    <?php endforeach; ?>
                    
                    <?php $allPassed = !in_array(false, $requirements); ?>
                    
                    <div class="mt-4">
                        <?php if ($allPassed): ?>
                            <p class="text-success"><i class="fas fa-check-circle me-2"></i>All requirements met! You can proceed with the installation.</p>
                            <a href="?step=2" class="btn btn-primary">
                                <i class="fas fa-arrow-right me-2"></i>Continue to Database Setup
                            </a>
                        <?php else: ?>
                            <p class="text-danger"><i class="fas fa-exclamation-triangle me-2"></i>Some requirements are not met. Please contact your hosting provider to resolve these issues.</p>
                            <button class="btn btn-secondary" onclick="location.reload()">
                                <i class="fas fa-refresh me-2"></i>Check Again
                            </button>
                        <?php endif; ?>
                    </div>
                    
                <?php elseif ($currentStep == 2): ?>
                    <!-- Step 2: Database Configuration -->
                    <form method="POST">
                        <p>Configure your PostgreSQL database connection:</p>
                        
                        <div class="row">
                            <div class="col-md-8 mb-3">
                                <label for="db_host" class="form-label">Database Host</label>
                                <input type="text" class="form-control" id="db_host" name="db_host" 
                                       value="<?php echo htmlspecialchars($_POST['db_host'] ?? 'localhost'); ?>" required>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="db_port" class="form-label">Port</label>
                                <input type="number" class="form-control" id="db_port" name="db_port" 
                                       value="<?php echo htmlspecialchars($_POST['db_port'] ?? '5432'); ?>">
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="db_name" class="form-label">Database Name</label>
                            <input type="text" class="form-control" id="db_name" name="db_name" 
                                   value="<?php echo htmlspecialchars($_POST['db_name'] ?? 'orderlyy'); ?>" required>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="db_username" class="form-label">Username</label>
                                <input type="text" class="form-control" id="db_username" name="db_username" 
                                       value="<?php echo htmlspecialchars($_POST['db_username'] ?? ''); ?>" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="db_password" class="form-label">Password</label>
                                <input type="password" class="form-control" id="db_password" name="db_password">
                            </div>
                        </div>
                        
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-database me-2"></i>Test Connection & Continue
                        </button>
                    </form>
                    
                <?php elseif ($currentStep == 3): ?>
                    <!-- Step 3: License Verification -->
                    <form method="POST">
                        <p>Enter your Orderlyy license key to continue:</p>
                        
                        <div class="mb-3">
                            <label for="license_key" class="form-label">License Key</label>
                            <input type="text" class="form-control" id="license_key" name="license_key" 
                                   placeholder="XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" maxlength="32" 
                                   style="font-family: monospace; letter-spacing: 2px;" required>
                            <div class="form-text">
                                Enter the 32-character license key you received after purchase.
                            </div>
                        </div>
                        
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Domain:</strong> <?php echo htmlspecialchars($_SERVER['HTTP_HOST']); ?><br>
                            Your license will be activated for this domain.
                        </div>
                        
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-key me-2"></i>Verify License & Continue
                        </button>
                    </form>
                    
                <?php elseif ($currentStep == 4): ?>
                    <!-- Step 4: Admin Account Setup -->
                    <form method="POST">
                        <p>Create your super administrator account:</p>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="admin_username" class="form-label">Username</label>
                                <input type="text" class="form-control" id="admin_username" name="admin_username" 
                                       value="<?php echo htmlspecialchars($_POST['admin_username'] ?? 'admin'); ?>" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="admin_email" class="form-label">Email Address</label>
                                <input type="email" class="form-control" id="admin_email" name="admin_email" 
                                       value="<?php echo htmlspecialchars($_POST['admin_email'] ?? ''); ?>" required>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="admin_name" class="form-label">Full Name</label>
                            <input type="text" class="form-control" id="admin_name" name="admin_name" 
                                   value="<?php echo htmlspecialchars($_POST['admin_name'] ?? ''); ?>" required>
                        </div>
                        
                        <div class="mb-3">
                            <label for="admin_password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="admin_password" name="admin_password" 
                                   minlength="6" required>
                            <div class="form-text">Password must be at least 6 characters long.</div>
                        </div>
                        
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-user-plus me-2"></i>Create Account & Continue
                        </button>
                    </form>
                    
                <?php elseif ($currentStep == 5): ?>
                    <!-- Step 5: Branding Configuration -->
                    <form method="POST">
                        <p>Customize your application branding:</p>
                        
                        <div class="mb-3">
                            <label for="app_name" class="form-label">Application Name</label>
                            <input type="text" class="form-control" id="app_name" name="app_name" 
                                   value="<?php echo htmlspecialchars($_POST['app_name'] ?? 'Orderlyy'); ?>" required>
                        </div>
                        
                        <div class="mb-3">
                            <label for="tagline" class="form-label">Tagline</label>
                            <input type="text" class="form-control" id="tagline" name="tagline" 
                                   value="<?php echo htmlspecialchars($_POST['tagline'] ?? 'Professional Order Management System'); ?>">
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="primary_color" class="form-label">Primary Color</label>
                                <input type="color" class="form-control form-control-color" id="primary_color" 
                                       name="primary_color" value="<?php echo $_POST['primary_color'] ?? '#ffc500'; ?>">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="secondary_color" class="form-label">Secondary Color</label>
                                <input type="color" class="form-control form-control-color" id="secondary_color" 
                                       name="secondary_color" value="<?php echo $_POST['secondary_color'] ?? '#000000'; ?>">
                            </div>
                        </div>
                        
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="fas fa-rocket me-2"></i>Install Orderlyy
                        </button>
                    </form>
                    
                <?php elseif ($currentStep == 6): ?>
                    <!-- Step 6: Installation Complete -->
                    <div class="text-center">
                        <i class="fas fa-check-circle text-success" style="font-size: 4rem;"></i>
                        <h3 class="mt-3 mb-4">Installation Complete!</h3>
                        
                        <p class="mb-4">Orderlyy has been successfully installed and configured.</p>
                        
                        <div class="alert alert-success text-start">
                            <h6>What's Next:</h6>
                            <ul class="mb-0">
                                <li>Delete or rename this installer file for security</li>
                                <li>Configure courier integrations in the admin panel</li>
                                <li>Upload your company logo in branding settings</li>
                                <li>Create admin and agent accounts</li>
                                <li>Import your first orders</li>
                            </ul>
                        </div>
                        
                        <div class="d-grid gap-2">
                            <a href="index.php" class="btn btn-primary btn-lg">
                                <i class="fas fa-home me-2"></i>Go to Application
                            </a>
                            <a href="login.php" class="btn btn-outline-primary">
                                <i class="fas fa-sign-in-alt me-2"></i>Login as Administrator
                            </a>
                        </div>
                        
                        <p class="text-muted mt-4">
                            <small>
                                <strong>Login Credentials:</strong><br>
                                Username: <?php echo htmlspecialchars($_SESSION['admin_data']['username'] ?? 'admin'); ?><br>
                                Use the password you created in step 4
                            </small>
                        </p>
                    </div>
                <?php endif; ?>
            </div>
        </div>
        
        <!-- Footer -->
        <div class="text-center mt-4">
            <p class="text-white opacity-75">
                <small>Orderlyy Professional Order Management System &copy; <?php echo date('Y'); ?></small>
            </p>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Auto-format license key input
        document.getElementById('license_key')?.addEventListener('input', function(e) {
            this.value = this.value.toUpperCase().replace(/[^A-Z0-9]/g, '');
        });
    </script>
</body>
</html>